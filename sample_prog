/*
	Opcode Reference

	0	NOP
	1	HLT
	2	ADD
	3	SUB
	4	MUL
	5	SL
	6	SR
	7	AND
	8	OR
	9	NOT
	10	XOR
	14	LOAD
	15	STORE
*/

/*
	Memory Organization:

	CS = 0-127
	DS = 128-255 
*/

0x0:
	// Normal Sanity Test

	LOAD 128 R1
	1110 10000000 0001
	LOAD 129 R2
	1110 10000001 0010
	ADD R3 R2 R1
	0010 0011 0010 0001
	STORE 130 R3	// Display 130
	1111 1000 0010 0011

	LOAD 128 R4
	1110 10000000 0100
	LOAD 129 R5
	1110 10000001 0101
	SUB R6 R4 R5
	0011 0110 0100 0101
	STORE 130 R6	// Display 130
	1111 10000010 0110

	LOAD 128 R7
	1110 10000000 0111
	LOAD 129 R8
	1110 10000001 1000
	MUL R9 R7 R8
	0100 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	SL R9 R7 R8
	0101 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	SR R9 R7 R8
	0110 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	AND R9 R7 R8
	0111 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	OR R9 R7 R8
	1000 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	NOT R9 R7 R8
	1001 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	XOR R9 R7 R8
	1010 1001 0111 1000
	STORE 130 R9	// Display 130
	1111 10000010 1001

	// ---------------------------
	// Advanced Tests

	// Case 1: Read after write
	// + same reg in cmd
	ADD R3, R1, R1
	0010 0011 0001 0001
	ADD R4, R3, R3
	0010 0100 0011 0011
	STORE 130 R4
	1111 10000010 0100

	// Case 2: LOAD/STORE
	LOAD 130 R1
	1110 10000010 0001
	STORE 130 R1
	1111 10000010 0001

	// Case 3: LOAD/STORE
	// + Op reg same as ip reg 
	XOR R1 R1 R1
	1010 0001 0001 0001
	STORE 130 R1
	1111 10000010 0001
	LOAD 130 R1
	1110 10000010 0001

	HLT
	0001 0000 0000 0000